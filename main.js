(()=>{"use strict";const t=new class{constructor(t){this.name=t,this.gameboard=new class{constructor(){this.grid=this.createGrid(),this.ships=this.createShips()}createShips=()=>[{name:"Carrier",length:5},{name:"Battleship",length:4},{name:"Destroyer",length:3},{name:"Submarine",length:3},{name:"Patrol Boat",length:2}].map((t=>new class{constructor(t,e){this.name=t,this.length=e,this.sunk=!1,this.sectionsHit=Array(e).fill(""),this.placed=!1}hit=t=>{this.sectionsHit[t-1]="x",this.isSunk()};isSunk=()=>{this.sectionsHit.every((t=>"x"==t))&&(this.sunk=!0)}}(t.name,t.length)));createGrid=()=>{const t=[];for(let e=0;e<10;e++){t.push([]);for(let i=0;i<10;i++)t[e].push("")}return t};placeShip=(t,e,i,s)=>{const h=i-1,o=e-1;if(this.checkForEnoughSpace(h,o,t.length,s)&&this.checkForExistingShip(h,o,t.length,s)){for(let e=0;e<t.length;e++)"x"==s?this.grid[o][h+e]={ship:t,position:e+1}:"y"==s&&(this.grid[o+e][h]={ship:t,position:e+1});t.placed=!0}};checkForExistingShip=(t,e,i,s)=>{if("x"==s){const s=this.grid[e].slice(t,t+i);return console.log(s),console.log(s.every((t=>""==t))),s.every((t=>""==t))}if("y"==s){const s=[];for(let h=0;h<i;h++)s.push(this.grid[e+h][t]);return console.log(s),s.every((t=>""==t))}};checkForEnoughSpace=(t,e,i,s)=>"x"==s?this.grid[e].slice(t,t+i).length==i:"y"==s?e+i<=10:void 0;receiveAttack=(t,e)=>{const i=e-1,s=t-1;if("object"==typeof this.grid[s][i]){const t=this.grid[s][i].ship,e=this.grid[s][i].position;t.hit(e)}else this.grid[s][i]="x"};checkAllShipsSunk=()=>this.ships.every((t=>t.sunk))}}randomShipPlacement=()=>{this.gameboard.ships.forEach((t=>{let e=Math.floor(10*Math.random())+1,i=Math.floor(10*Math.random())+1,s=Math.random()>.5?"x":"y";for(;!1===t.placed;)this.gameboard.placeShip(t,e,i,s),e=Math.floor(10*Math.random())+1,i=Math.floor(10*Math.random())+1,s=Math.random()>.5?"x":"y"}))}}("Jon");t.randomShipPlacement(),console.log(t.gameboard)})();